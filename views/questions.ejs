<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Question List</title>

  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
</head>

<body>
  <nav class="navbar navbar-expand-lg navbar-light bg-light shadow">
    <a class="navbar-brand" href="#">TestMaster <sub>by Algodomain Solutions</sub></a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav"
      aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav ml-auto">
        <li class="nav-item">
          <a class="nav-link" href="/results">Results</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/upload">Create Questions</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/questions-list">Questions</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/testmaster/api/questionpapers">Question Papers</a>
        </li>
      </ul>
    </div>
  </nav>
  <div class="container">
    <h3 class="  text-center mt-3">Questions List</h3>

    <div class="input-group mb-3 shadow">
      <input type="text" id="searchInput" class="form-control" placeholder="Search by Question Tags" />
      <div class="input-group-append">
        <button id="searchButton" class="btn btn-primary">Search</button>
      </div>
    </div>

    <button id="createQuestionButton" class="btn btn-success d-grid justify-content-end shadow">
      Create New Question
    </button>


    <button id="addToQuestionPaperButton" class="btn btn-primary d-grid justify-content-end ml-2 shadow">
      Add to Question Paper
    </button>

    <table class="table table-bordered mt-2 shadow">
      <thead class="thead-dark">
        <tr>
          <th class="text-center">Select</th>
          <th class="text-center">Question Id</th>
          <th class="text-center">Question Title</th>
          <th class="text-center">Question Description</th>
          <th class="text-center">Image</th>
          <th class="text-center">Question Type</th>
          <th class="text-center">Question Tags</th>
          <!-- <th>Options</th> -->
          <th class="text-center">Action</th>
        </tr>
      </thead>
      <tbody>
        <% questions.forEach((question)=> { %>
          <tr>
            <td class="text-center"> <input type="checkbox" name="selectedQuestions"
                value="<%= question.questionId %>" /> </td>
            <td class="text-center">
              <%= question.questionId %>
            </td>
            <td class="text-center">
              <%= question.questionTitle %>
            </td>
            <td class="text-center">
              <%= question.questionDescription %>
            </td>
            <td class="text-center">
              <%= question.image %>
            </td>
            <td class="text-center">
              <%= question.questionType %>
            </td>
            <td class="text-center">
              <%= question.questionTags %>
            </td>
            <!-- <td>
              <ul>
                <% question.options.forEach((option)=> { %>
                <li>
                  <%= option.text %> (<%= option.isCorrect ? 'Correct' :
                  'Incorrect' %>)
                </li>
                <% }); %>
              </ul>
            </td> -->
            <td class="text-center">
              <button class="btn border  border-black rounded  " onclick="editQuestion('<%= question.questionId %>')">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pen"
                  viewBox="0 0 16 16">
                  <path
                    d="m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001zm-.644.766a.5.5 0 0 0-.707 0L1.95 11.756l-.764 3.057 3.057-.764L14.44 3.854a.5.5 0 0 0 0-.708l-1.585-1.585z" />
                </svg>
              </button>
              <button class="btn  border  border-black rounded " onclick="deleteQuestion('<%= question._id %>')">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash"
                  viewBox="0 0 16 16">
                  <path
                    d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6Z" />
                  <path
                    d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1ZM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118ZM2.5 3h11V2h-11v1Z" />
                </svg>
              </button>
            </td>
          </tr>
          <% }); %>
      </tbody>
    </table>
  </div>

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

  <script>

    document.getElementById("addToQuestionPaperButton").addEventListener("click", addToQuestionPaper);


    function searchQuestions() {
      const searchInput = document.getElementById("searchInput").value;
      // Send an API request with the searchInput to filter questions by tags
      // Update the table with the filtered results
    }


    function getSelectedQuestionIds() {
      const checkboxes = document.querySelectorAll(
        'input[name="selectedQuestions"]:checked'
      );
      const selectedIds = Array.from(checkboxes).map(
        (checkbox) => checkbox.value
      );
      return selectedIds.map(Number);
    }



    function addToQuestionPaper() {
      const selectedQuestionIds = getSelectedQuestionIds();

      if (selectedQuestionIds.length === 0) {
        alert("Please select at least one question to add to the question paper.");
        return;
      }

      

      const questionPaperId = localStorage.getItem('questionPaperId');

      let questionIds = [];
      questionIds = questionIds.concat(selectedQuestionIds);
      console.log('questionIds', questionIds);

      

      console.log('before', questionPaperId)
      if (!questionPaperId) {
        alert("If you already created a question paper and want to add more questions go for edit question paper edit.");
        return;
      }


      //  window.location.href = `/testmaster/api/questionpapersdetails/${questionPaperId}`;
      //const afterRemoving = localStorage.removeItem('questionPaperId');

      //console.log('after',afterRemoving)
      // const questionPaper = {

      //   questionIds: selectedQuestionIds, 
      // };
      // Send a POST request to update the question paper with the selected question IDs
      fetch(`http://localhost:3000/testmaster/api/questionpapers/${questionPaperId}`, {
        method: "PUT",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ questionIds: questionIds }),
      })
        .then((response) => {
          if (response.ok) {
            alert("Questions added to the question paper successfully.");

            window.location.href = `/testmaster/api/questionpapersdetails/${questionPaperId}`;

            localStorage.removeItem("questionPaperId");
          } else {
            console.error("Error adding questions to the question paper");
          }
        })
        .catch((error) => {
          console.error("Error adding questions to the question paper:", error);
        });
    }



    function editQuestion(questionId) {
      window.location.href = `/testmaster/api/edit-question/${questionId}`;
    }

    function createQuestion() {
      window.location.href = "/upload";
    }

    function deleteQuestion(questionId) {
      const confirmed = confirm(
        "Are you sure you want to delete this question?"
      );
      if (confirmed) {
        fetch(
          `http://localhost:3000/testmaster/api/questions/${questionId}`,
          {
            method: "DELETE",
          }
        )
          .then((response) => {
            if (response.ok) {
              window.location.reload();
            } else {
              console.error("Error deleting question");
            }
          })
          .catch((error) => {
            console.error("Error deleting question:", error);
          });
      }
    }

    document
      .getElementById("searchButton")
      .addEventListener("click", searchQuestions);
    document
      .getElementById("createQuestionButton")
      .addEventListener("click", createQuestion);
  </script>
</body>

</html>